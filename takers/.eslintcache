[{"/Users/waseehaque/Codes/McqApp/takers/src/index.js":"1","/Users/waseehaque/Codes/McqApp/takers/src/reportWebVitals.js":"2","/Users/waseehaque/Codes/McqApp/takers/src/components/App.js":"3","/Users/waseehaque/Codes/McqApp/takers/src/components/ExamArea.js":"4","/Users/waseehaque/Codes/McqApp/takers/src/components/McqQuestion.js":"5","/Users/waseehaque/Codes/McqApp/takers/src/components/LeftPanel.js":"6","/Users/waseehaque/Codes/McqApp/takers/src/components/store.js":"7"},{"size":657,"mtime":1609681224295,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608538176884,"results":"10","hashOfConfig":"9"},{"size":2329,"mtime":1609840452970,"results":"11","hashOfConfig":"9"},{"size":692,"mtime":1609849510282,"results":"12","hashOfConfig":"9"},{"size":2384,"mtime":1609700371210,"results":"13","hashOfConfig":"9"},{"size":1114,"mtime":1609841511130,"results":"14","hashOfConfig":"9"},{"size":1083,"mtime":1609701648119,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1n9867n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/waseehaque/Codes/McqApp/takers/src/index.js",[],["33","34"],"/Users/waseehaque/Codes/McqApp/takers/src/reportWebVitals.js",[],"/Users/waseehaque/Codes/McqApp/takers/src/components/App.js",["35"],"import './App.css';\nimport ExamArea from './ExamArea';\nimport { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LeftPanel from './LeftPanel';\nimport { useDispatch, useSelector } from 'react-redux';\n\n/*\n\nprops.exam_id = ID of the exam, passed on from index.js\n*/\n\nconst ADD_QUESTION = 'ADD_QUESTION';\nconst ADD_PROPERTY = 'ADD_PROPERTY';\n\n\nfunction App(props) {\n\n  const dispatch = useDispatch();\n\n  var answers = useSelector(state=>state.answers);\n  var property = useSelector(state=>state.property);\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n\n  /*The function that does the fetching from the API */\n  function getExam(examID) {\n\n    var url = \"https://mcq-app-6cef8-default-rtdb.firebaseio.com/test/exams/\" + examID + \".json\";\n\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          dispatch({'type' : ADD_PROPERTY, 'payload' : result.property});\n          dispatch({'type' : ADD_QUESTION, 'payload' : result.questions});\n          setIsLoaded(true);\n        }\n      )\n  }\n\n  useEffect(() => {\n    getExam(props.exam_id);\n  }, []);\n\n\n  if (isLoaded) {\n\n    return (\n\n      <div className=\"App\">\n        <Grid container spacing={0} display=\"inline\">\n\n\n          {/**Old Top Panel */}\n          <Grid item xs={12}>\n            <AppBar style={{background: '#14213D', position: \"fixed\"}}>\n              <Toolbar><b>{property['title']}</b>\n                {/*CSS for the submit button is in App.css*/}\n                <button onClick={() => console.log(answers)} class=\"submit_button\">Submit</button>\n              </Toolbar>\n            </AppBar>\n          </Grid>\n\n\n         {/**Old Left Panel */}\n          <Grid item xs={4} style={{overflowY: 'scroll'}}>\n            <LeftPanel/>\n          </Grid>\n\n\n          <Grid item xs={8}>\n            <ExamArea/>\n          </Grid>\n\n        </Grid>\n      </div>\n    );\n  }\n\n  /*This gets rendered when the fetch method is still getting the response from the API call */\n  else {\n\n    return (\n\n      <div class=\"App loading\">\n        <CircularProgress style = {{color : \"#FCA311\"}}></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","/Users/waseehaque/Codes/McqApp/takers/src/components/ExamArea.js",["36","37"],"/Users/waseehaque/Codes/McqApp/takers/src/components/McqQuestion.js",["38"],"import './McqQuestion.css'\nimport React, { useState } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\n\n/*\nThis is the question object. It takes in the question and returns the question card with the question\nand answers.\n\nThe props to be passed:\nprops.question = Question object, packed properly.\n\nTo Do:\n\n\n*/\n\n\nfunction McqQuestion(props) {\n\n    const ADD_ANSWER = 'ADD_ANSWER';\n\n    var dispatch = useDispatch();\n\n    const [OptionSelectedStatus, setOptionSelectedStatus] = useState(\"\");\n\n    \n    function updateAnswer(a) {\n\n        dispatch(\n            {\n                \"type\" : ADD_ANSWER,\n                \"id\" : props.question.id,\n                \"answer\" : a\n            }\n        );\n\n        setOptionSelectedStatus(a);\n\n    }\n\n    /**\n     * Generates the answer \"component\", with the proper className.\n     * @param {String} choice The text for the answer choice\n     * @param {char} index One of a/b/c/d \n     */\n    function mcqChoiceGeneratingFunc(choice, index) {\n\n        var optionClassname = \"Option-unselected\";\n        var selectorClassname = \"selector-unselected\";\n\n        if (OptionSelectedStatus == String.fromCharCode(97 + index)) {\n            optionClassname = \"Option-selected\";\n            selectorClassname = \"selector-selected\";\n        }\n\n        return (\n\n            <div onClick={() => updateAnswer(String.fromCharCode(97 + index))} class={optionClassname}>\n                <b class={selectorClassname}>{String.fromCharCode(97 + index)}</b>\n                <div class=\"answer-option-text\">{choice}</div>\n            </div>\n\n        );\n    }\n\n    const choices = props.question.answer_choices;\n\n    const mcqChoices = choices.map((choice, index) =>\n\n        mcqChoiceGeneratingFunc(choice, index)\n\n    );\n\n\n    return (\n\n        <Paper class=\"Question\">\n            <form class=\"Question-form\">\n                <div class=\"question-title\">\n                    <QuestionAnswerIcon style = {{color: \"#FCA311\", display: \"inline-block\"}}/>\n                    <span class=\"question-title-text\">{props.question.title}</span>\n                </div>\n                <div class=\"question-text\">{props.question.question_text}</div>\n                {mcqChoices}\n            </form>\n        </Paper>\n\n\n    );\n\n}\n\nexport default McqQuestion;","/Users/waseehaque/Codes/McqApp/takers/src/components/LeftPanel.js",["39","40","41"],"/Users/waseehaque/Codes/McqApp/takers/src/components/store.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":48,"column":6,"nodeType":"48","endLine":48,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":2,"column":27,"nodeType":"52","messageId":"53","endLine":2,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":53,"column":34,"nodeType":"57","messageId":"58","endLine":53,"endColumn":36},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"59","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":29},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExam' and 'props.exam_id'. Either include them or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'KeyboardArrowDownIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [getExam, props.exam_id]",{"range":"65","text":"66"},[1269,1271],"[getExam, props.exam_id]"]