[{"/Users/waseehaque/Codes/McqApp/takers/src/index.js":"1","/Users/waseehaque/Codes/McqApp/takers/src/reportWebVitals.js":"2","/Users/waseehaque/Codes/McqApp/takers/src/components/App.js":"3","/Users/waseehaque/Codes/McqApp/takers/src/components/ExamArea.js":"4","/Users/waseehaque/Codes/McqApp/takers/src/components/McqQuestion.js":"5","/Users/waseehaque/Codes/McqApp/takers/src/components/LeftPanel.js":"6","/Users/waseehaque/Codes/McqApp/takers/src/components/store.js":"7","/Users/waseehaque/Codes/McqApp/takers/src/components/LoginScreen.js":"8"},{"size":664,"mtime":1610368857549,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608538176884,"results":"11","hashOfConfig":"10"},{"size":2403,"mtime":1610366336428,"results":"12","hashOfConfig":"10"},{"size":692,"mtime":1609849510282,"results":"13","hashOfConfig":"10"},{"size":2352,"mtime":1610366904771,"results":"14","hashOfConfig":"10"},{"size":1183,"mtime":1610186357009,"results":"15","hashOfConfig":"10"},{"size":1083,"mtime":1609701648119,"results":"16","hashOfConfig":"10"},{"size":755,"mtime":1610370855136,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n9867n",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/waseehaque/Codes/McqApp/takers/src/index.js",[],"/Users/waseehaque/Codes/McqApp/takers/src/reportWebVitals.js",[],["39","40"],"/Users/waseehaque/Codes/McqApp/takers/src/components/App.js",["41"],"import './App.css';\nimport ExamArea from './ExamArea';\nimport { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LeftPanel from './LeftPanel';\nimport { useDispatch, useSelector } from 'react-redux';\n\n/*\n\nprops.exam_id = ID of the exam, passed on from index.js\n*/\n\nconst ADD_QUESTION = 'ADD_QUESTION';\nconst ADD_PROPERTY = 'ADD_PROPERTY';\n\n\nfunction App(props) {\n\n  const dispatch = useDispatch();\n\n  var answers = useSelector(state=>state.answers);\n  var property = useSelector(state=>state.property);\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n\n  /*The function that does the fetching from the API */\n  function getExam(examID) {\n\n    var url = \"https://mcq-app-6cef8-default-rtdb.firebaseio.com/test/exams/\" + examID + \".json\";\n\n    console.log(url, \"URL\")\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          dispatch({'type' : ADD_PROPERTY, 'payload' : result.property});\n          dispatch({'type' : ADD_QUESTION, 'payload' : result.questions});\n          setIsLoaded(true);\n        }\n      )\n  }\n\n  useEffect(() => {\n    getExam(props.exam_id);\n  }, []);\n\n\n  if (isLoaded) {\n\n    return (\n\n      <div className=\"App\">\n        <Grid container spacing={0} display=\"inline\">\n\n\n          {/**Old Top Panel */}\n          <Grid item xs={12}>\n            <AppBar style={{background: '#14213D', position: \"fixed\"}}>\n              <Toolbar><b>{property['title']}</b>\n                {/*CSS for the submit button is in App.css*/}\n                <button onClick={() => console.log(answers)} class=\"submit_button\">Submit</button>\n              </Toolbar>\n            </AppBar>\n          </Grid>\n\n\n         {/**Old Left Panel */}\n          <Grid item xs={0} md={4} style={{overflowY: 'scroll'}}>\n            <LeftPanel/>\n          </Grid>\n\n\n          <Grid item xs={12} md={8}>\n            <ExamArea/>\n          </Grid>\n\n        </Grid>\n      </div>\n    );\n  }\n\n  /*This gets rendered when the fetch method is still getting the response from the API call */\n  else {\n\n    return (\n\n      <div class=\"App loading\">\n        <CircularProgress style = {{color : \"#FCA311\"}}></CircularProgress>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","/Users/waseehaque/Codes/McqApp/takers/src/components/ExamArea.js",["42","43"],"import McqQuestion from './McqQuestion'\nimport React, { useState, useEffect } from 'react';\nimport './ExamArea.css'\nimport { useSelector } from 'react-redux';\n\n/*\nThis is the file that pulls data from the API and renders questions on the screen.\n\nThings to do:\n\n*/\n\n\nfunction ExamArea() {\n\n        var question = useSelector(store => store.questions);\n\n        let mcqQuestionList = [];\n        for(var key in question) {\n            mcqQuestionList[mcqQuestionList.length] = <McqQuestion question = {question[key]}/>;\n        }\n        \n        return (\n            <div className=\"ExamArea\">\n                {mcqQuestionList}\n            </div> \n        );\n    \n\n}\n\nexport default ExamArea;","/Users/waseehaque/Codes/McqApp/takers/src/components/McqQuestion.js",["44"],"import './McqQuestion.css'\nimport React, { useState } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\n\n/*\nThis is the question object. It takes in the question and returns the question card with the question\nand answers.\n\nThe props to be passed:\nprops.question = Question object, packed properly.\n\nTo Do:\n\n\n*/\n\n\nfunction McqQuestion(props) {\n\n    const ADD_ANSWER = 'ADD_ANSWER';\n\n    var dispatch = useDispatch();\n\n    const [OptionSelectedStatus, setOptionSelectedStatus] = useState(\"\");\n\n    \n    function updateAnswer(a) {\n\n        dispatch(\n            {\n                \"type\" : ADD_ANSWER,\n                \"id\" : props.question.id,\n                \"answer\" : a\n            }\n        );\n\n        setOptionSelectedStatus(a);\n\n    }\n\n    /**\n     * Generates the answer \"component\", with the proper className.\n     * @param {String} choice The text for the answer choice\n     * @param {char} index One of a/b/c/d \n     */\n    function mcqChoiceGeneratingFunc(choice, index) {\n\n\n        var optionClassname = \"Option-unselected\";\n        var selectorClassname = \"selector-unselected\";\n\n        if (OptionSelectedStatus == index) {\n            optionClassname = \"Option-selected\";\n            selectorClassname = \"selector-selected\";\n        }\n\n        return (\n\n            <div onClick={() => updateAnswer(index)} class={optionClassname}>\n                <b class={selectorClassname}>{index}</b>\n                <div class=\"answer-option-text\">{choice}</div>\n            </div>\n\n        );\n    }\n\n    const choices = props.question.answer_choices;\n    const mcqChoices = [];\n\n    for (var index in choices) {\n        mcqChoices[mcqChoices.length] = mcqChoiceGeneratingFunc(choices[index], index);\n    }\n\n\n\n    return (\n\n        <Paper class=\"Question\">\n            <form class=\"Question-form\">\n                <div class=\"question-title\">\n                    <QuestionAnswerIcon style = {{color: \"#FCA311\", display: \"inline-block\"}}/>\n                    <span class=\"question-title-text\">{props.question.title}</span>\n                </div>\n                <div class=\"question-text\">{props.question.question_text}</div>\n                {mcqChoices}\n            </form>\n        </Paper>\n\n\n    );\n\n}\n\nexport default McqQuestion;","/Users/waseehaque/Codes/McqApp/takers/src/components/LeftPanel.js",["45","46","47"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './LeftPanel.css'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nfunction LeftPanel(props) {\n\n    var answers = useSelector(store => store.answers);\n    var questions = useSelector(store => store.questions);\n\n\n  function QuestionListGeneratingFunc(ques) {\n    var quickviewElementclass = \"answer_quickview_element_unanswered\";\n    if(ques.id in answers){quickviewElementclass = \"answer_quickview_element_answered\"}\n    return(\n    <div class={quickviewElementclass}>\n        <span>{ques.title}</span>\n    </div>\n        );\n}\n\nlet quesList = [];\n\nfor(var key in questions){\n    quesList[quesList.length] = QuestionListGeneratingFunc(questions[key]);\n  }\n\n\n\n    return(\n        <div class=\"leftPanel\">\n        <div class=\"leftpanel_quickview\" position=\"fixed\">\n          <div class=\"leftPanel_heading\">\n              <span class=\"leftpanel_heading_element_selected\">Assigned</span>\n              <span class=\"leftpanel_heading_element\">Results</span>\n          </div>\n\n          {quesList}\n\n        </div>\n      </div>\n    );\n\n}\n\nexport default LeftPanel;","/Users/waseehaque/Codes/McqApp/takers/src/components/store.js",[],"/Users/waseehaque/Codes/McqApp/takers/src/components/LoginScreen.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":50,"column":6,"nodeType":"54","endLine":50,"endColumn":8,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":17,"nodeType":"58","messageId":"59","endLine":2,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":2,"column":27,"nodeType":"58","messageId":"59","endLine":2,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":54,"column":34,"nodeType":"63","messageId":"64","endLine":54,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"65","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExam' and 'props.exam_id'. Either include them or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'KeyboardArrowDownIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [getExam, props.exam_id]",{"range":"71","text":"72"},[1328,1330],"[getExam, props.exam_id]"]