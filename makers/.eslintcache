[{"/Users/waseehaque/Codes/McqApp/makers/src/index.js":"1","/Users/waseehaque/Codes/McqApp/makers/src/reportWebVitals.js":"2","/Users/waseehaque/Codes/McqApp/makers/src/components/App.js":"3","/Users/waseehaque/Codes/McqApp/makers/src/components/store.js":"4","/Users/waseehaque/Codes/McqApp/makers/src/components/testComponent.js":"5","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-result.js":"6","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard.js":"7","/Users/waseehaque/Codes/McqApp/makers/src/components/LoginPage.js":"8","/Users/waseehaque/Codes/McqApp/makers/src/components/api.js":"9","/Users/waseehaque/Codes/McqApp/makers/src/components/ExamView.js":"10","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-res-student.js":"11","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-exam.js":"12","/Users/waseehaque/Codes/McqApp/makers/src/components/ExamArea.js":"13","/Users/waseehaque/Codes/McqApp/makers/src/components/McqQuestion.js":"14","/Users/waseehaque/Codes/McqApp/makers/src/components/QuestionEditor.js":"15","/Users/waseehaque/Codes/McqApp/makers/src/components/ErrorPage.js":"16"},{"size":1073,"mtime":1611649112946,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608538176884,"results":"19","hashOfConfig":"18"},{"size":674,"mtime":1611653568381,"results":"20","hashOfConfig":"18"},{"size":1653,"mtime":1611401120112,"results":"21","hashOfConfig":"18"},{"size":400,"mtime":1610554863234,"results":"22","hashOfConfig":"18"},{"size":2411,"mtime":1611645745234,"results":"23","hashOfConfig":"18"},{"size":3126,"mtime":1611653928165,"results":"24","hashOfConfig":"18"},{"size":2901,"mtime":1611651133586,"results":"25","hashOfConfig":"18"},{"size":3038,"mtime":1611652764035,"results":"26","hashOfConfig":"18"},{"size":1987,"mtime":1611655456859,"results":"27","hashOfConfig":"18"},{"size":232,"mtime":1611645745231,"results":"28","hashOfConfig":"18"},{"size":1847,"mtime":1611401286279,"results":"29","hashOfConfig":"18"},{"size":954,"mtime":1611655485126,"results":"30","hashOfConfig":"18"},{"size":8788,"mtime":1611401286283,"results":"31","hashOfConfig":"18"},{"size":3075,"mtime":1611645745242,"results":"32","hashOfConfig":"18"},{"size":613,"mtime":1611650963115,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ed4oe2",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/waseehaque/Codes/McqApp/makers/src/index.js",["71"],"/Users/waseehaque/Codes/McqApp/makers/src/reportWebVitals.js",[],["72","73"],"/Users/waseehaque/Codes/McqApp/makers/src/components/App.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/store.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/testComponent.js",["74","75","76"],"/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-result.js",["77"],"import React, { useEffect, useState } from \"react\";\nimport \"./Dashboard-result.css\";\nimport List from \"./Dashboard-res-student\";\n\nfunction DashboardResult() {\n  const [showProgBar, setShowProgBar] = useState(false);\n  const con = !showProgBar;\n  const downloadResultHandler = () => setShowProgBar(con);\n\n  let progbar = null;\n  if (showProgBar) progbar = <div className='progbar'></div>;\n\n  return (\n    <div className='Dashboard-result'>\n      <div className='header'>\n        <div className='left'>\n          <h3>ECO 486: Homework Quiz 42</h3>\n          <div className='labels'>\n            <span>Published</span>\n            <span>Drafted</span>\n          </div>\n        </div>\n        <button className='edit-btn'>Edit Exam</button>\n      </div>\n      {/* Download section */}\n      <div className='download-section'>\n        <button className='download-btn' onClick={downloadResultHandler}>\n          Download as Excel\n        </button>\n        {/* progbar */}\n        {progbar}\n      </div>\n\n      {/* The list */}\n      <ul className='students-list'>\n        <div className='students-list-header'>\n          <h3>Name</h3>\n          <h3>Score</h3>\n        </div>\n\n        <List name='John Doe' score='35' />\n        <List name='Jane Doe' score='30' />\n        <List name='John Doe' score='35' />\n        <List name='Jane Doe' score='30' />\n        <List name='John Doe' score='35' />\n        <List name='Jane Doe' score='30' />\n      </ul>\n    </div>\n  );\n}\n\nexport default DashboardResult;\n\n/*\n\n<div className='top'>\n        <div className='board-content'>\n          <h3>ECO 486: Homework Quiz result</h3>\n          <p>\n            Created: <span>16 January, 2021</span>\n          </p>\n          <p>40 Multiple Choice Questions</p>\n        </div>\n        <div className='dots' onClick={viewMoreHandler}>\n          <i className='fa fa-ellipsis-h'>\n            <span className='sr-only'>Click to view result</span>\n          </i>\n          {viewMoreBtn}\n        </div>\n      </div>\n      <div className='board-settings'>\n        <p className='exam-id' onClick={copyValueHandler}>\n          Exam id: <span>NF453</span>\n        </p>\n\n        <button className='button edit'>\n          <i className='fa fa-edit'></i>\n          <span>Edit</span>\n        </button>\n        <button className='button'>\n          <i className='fa fa-trash'></i>\n          <span>Delete</span>\n        </button>\n      </div>\n\n\n\n\n*/\n","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard.js",["78","79","80","81"],"/Users/waseehaque/Codes/McqApp/makers/src/components/LoginPage.js",["82"],"/Users/waseehaque/Codes/McqApp/makers/src/components/api.js",["83","84"],"/Users/waseehaque/Codes/McqApp/makers/src/components/ExamView.js",["85","86","87","88","89","90"],"/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-res-student.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-exam.js",["91","92","93","94","95"],"import { AppBar, Toolbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard-exam.css\";\n\nfunction DashboardExam() {\n  // Display view more btn functionality\n  const [viewMore, setViewMore] = useState(false);\n  const viewMoreHandler = () =>\n    !viewMore ? setViewMore(true) : setViewMore(false);\n  const viewMoreBtn = viewMore ? (\n    <button className='btn-viewMore'>View result</button>\n  ) : null;\n\n  const copyValueHandler = () => console.log(\"Copy func\");\n\n  return (\n    <div className='Dashboard-board'>\n      <div className='top'>\n        <div className='board-content'>\n          <h3>ECO 486: Homework Quiz 5</h3>\n          <p>\n            Created: <span>16 January, 2021</span>\n          </p>\n          <p>40 Multiple Choice Questions</p>\n        </div>\n        <div className='dots' onClick={viewMoreHandler}>\n          <i className='fa fa-ellipsis-h'>\n            <span className='sr-only'>Click to view result</span>\n          </i>\n          {viewMoreBtn}\n        </div>\n      </div>\n      <div className='board-settings'>\n        <p className='exam-id' onClick={copyValueHandler}>\n          Exam id: <span>NF453</span>\n        </p>\n\n        <button className='button edit'>\n          <i className='fa fa-edit'></i>\n          <span>Edit</span>\n        </button>\n        <button className='button'>\n          <i className='fa fa-trash'></i>\n          <span>Delete</span>\n        </button>\n      </div>\n    </div>\n  );\n  {\n    /* single board/box ends */\n  }\n}\n\nexport default DashboardExam;\n\n/*\n<AppBar style={{ background: \"#14213D\", position: \"fixed\" }}>\n        <Toolbar></Toolbar>\n      </AppBar>\n\n      <div className='Exam-card' position='fixed'></div>\n      <div className='Exam-card' position='fixed'></div>\n\n*/\n\n/*\n1. Single Exam \n2. All the data will be parsed from the api\n*/\n","/Users/waseehaque/Codes/McqApp/makers/src/components/ExamArea.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/McqQuestion.js",["96","97","98","99","100"],"import \"./McqQuestion.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Paper, TextField, Checkbox, FormGroup } from \"@material-ui/core\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { EditorState } from \"draft-js\";\n\nimport QuestionEditor from \"./QuestionEditor\";\n\nconst ADD_QUESTION = \"ADD_QUESTION\";\nconst ADD_ANSWER = \"ADD_ANSWER\";\n\n/*\nThis is the component that lets the maker create the question, and then stores the question to packedQuestion.\npackedQuestipn is in a format which can be directly sent to the API to be uploaded to the database.\nA basic question has question_text, question.title\n\nProps passed:\nprops.id = The Question ID.\n\nThings to Do:\n*/\n\nfunction McqQuestion(props) {\n  const [cn, setCn] = useState(\"Option-unselected\");\n  const [editorClassname, setEditorClassname] = useState(\"question-text\");\n  const [packedQuestion, setPackedQuestion] = useState({});\n  const [packedAnswer, setPackedAnswer] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const [editorState, setEditorState] = React.useState(() =>\n    EditorState.createEmpty()\n  );\n\n  /**\n   * This function is the action that gets passed to the Redux store.\n   * @param {String} quesid Question ID in the form ques1, ques2, ques3 and onwards. Not an integer.\n   * @param {Object} ques Packed question that gets stored directy into the store, ready for use later on.\n   */\n  function addQuestionAction(quesid, ques) {\n    var retval = {\n      type: ADD_QUESTION,\n      id: quesid,\n      question: ques,\n    };\n\n    return retval;\n  }\n\n  /**\n   * This function is the action that gets passed to the Redux store.\n   * @param {String} quesid Question ID in the form ques1, ques2, ques3 and onwards. Not an integer.\n   * @param {Object} answer Packed answer that gets stored directy into the store, ready for use later on.\n   */\n  function addAnswerAction(quesid, answer) {\n    var retval = {\n      type: ADD_ANSWER,\n      id: quesid,\n      answer: answer,\n    };\n\n    return retval;\n  }\n\n  /*These two variables store a local copy of packedQuestion. These variables are first updated with the information from\n    onChange (or a variation of it), and then packedQuestion is set to an instance of this. */\n\n  let local_question_mcq = {};\n  let local_answerChoices_mcq = {};\n  var local_correct_answer = [];\n\n  /**\n   * When a new question is created, fillUpWithDefault gets called, and it fills up the Redux store with defaults for new Questions.\n   * This helps in making sure everything stored on the database is as per the schema, even if the user has left out things.\n   */\n  function fillUpWithDefault() {\n    function addOption(character, value) {\n      local_answerChoices_mcq[character] = value;\n      local_question_mcq[\"answer_choices\"] = local_answerChoices_mcq;\n    }\n\n    /**\n     * Function that packs Questions.\n     * @param {Boolean} title Boolean isTitle. If the value is a title set to true. If it is question_text, set to false.\n     * @param {String} value Value that would be sent to packed question.\n     */\n    function addQuestion(title, value) {\n      if (title) {\n        local_question_mcq[\"title\"] = value;\n      } else {\n        local_question_mcq[\"question_text\"] = value;\n      }\n    }\n\n    addQuestion(true, \"Question \" + props.id);\n    addQuestion(false, \"\");\n\n    addOption(\"a\", \"\");\n    addOption(\"b\", \"\");\n    addOption(\"c\", \"\");\n    addOption(\"d\", \"\");\n\n    local_question_mcq[\"title\"] = \"Question \" + props.id;\n    local_question_mcq[\"id\"] = props.id;\n\n    setPackedQuestion(local_question_mcq);\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n\n    //These are for the answers\n    dispatch(addAnswerAction(\"ques\" + props.id, \"\"));\n  }\n\n  useEffect(() => fillUpWithDefault(), []);\n\n  function optionOnInputFunc(character, value) {\n    local_question_mcq = { ...packedQuestion };\n    local_answerChoices_mcq = { ...local_question_mcq[\"answer_choices\"] };\n    local_answerChoices_mcq[character] = value;\n    local_question_mcq[\"answer_choices\"] = local_answerChoices_mcq;\n\n    setPackedQuestion(local_question_mcq);\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n  }\n\n  function titleOnInputFunc(value) {\n    local_question_mcq = { ...packedQuestion };\n    local_question_mcq[\"title\"] = value;\n    setPackedQuestion(local_question_mcq);\n  }\n\n  function questionOnInputFunc(value) {\n    setEditorState(value);\n    local_question_mcq = { ...packedQuestion };\n    local_question_mcq[\n      \"question_text\"\n    ] = value.getCurrentContent().getPlainText();\n    setPackedQuestion(local_question_mcq);\n\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n  }\n\n  /**Returns the checkbox\n   *\n   * @param checkBox_id The letter than corresponds to the option choice\n   */\n  function checkb(checkBox_id) {\n    return (\n      <Checkbox\n        tabIndex='-1'\n        disableRipple={true}\n        onClick={(e) => recordAnswer(checkBox_id, e)}\n        style={{ color: \"#FCA311\", outline: \"none\" }}\n        icon={<CheckBoxIcon fontSize='medium' style={{ color: \"#D9D9D9\" }} />}\n        checkedIcon={<CheckBoxIcon fontSize='medium' />}\n      />\n    );\n  }\n\n  function recordAnswer(checkBox_id, event) {\n    //This if statement checks if the checkbox is being checked or unchecked. We ignore if being unchecked.\n    if (event.target.checked) {\n      local_correct_answer = packedAnswer;\n      local_correct_answer.push(checkBox_id);\n      setPackedAnswer(local_correct_answer);\n      dispatch(addAnswerAction(\"ques\" + props.id, checkBox_id));\n    } else {\n      local_correct_answer = packedAnswer;\n      local_correct_answer.pop();\n      setPackedAnswer(local_correct_answer);\n      dispatch(\n        addAnswerAction(\n          \"ques\" + props.id,\n          local_correct_answer[local_correct_answer.length - 1]\n        )\n      );\n    }\n  }\n\n  //Styling functions.\n  function cngenerator(char) {\n    if (char == cn) return \"Option-selected\";\n    else return \"Option-unselected\";\n  }\n\n  function selectorcnGenerator(char) {\n    if (char == cn) return \"selector-selected\";\n    else return \"selector-unselected\";\n  }\n\n  function mcqChoiceGeneratingFunc() {\n    return (\n      <div class='Opt'>\n        <FormGroup>\n          <InputBase\n            endAdornment={checkb(\"a\")}\n            startAdornment={<b className={selectorcnGenerator(\"a\")}>a</b>}\n            onChange={(e) => optionOnInputFunc(\"a\", e.target.value)}\n            className={cngenerator(\"a\")}\n            onFocus={() => setCn(\"a\")}\n            onBlur={() => setCn(\"\")}\n            label='Option A'\n          />\n          <InputBase\n            endAdornment={checkb(\"b\")}\n            startAdornment={<b className={selectorcnGenerator(\"b\")}>b</b>}\n            onChange={(e) => optionOnInputFunc(\"b\", e.target.value)}\n            className={cngenerator(\"b\")}\n            onFocus={() => setCn(\"b\")}\n            onBlur={() => setCn(\"\")}\n            label='Option B'\n          />\n          <InputBase\n            endAdornment={checkb(\"c\")}\n            startAdornment={<b className={selectorcnGenerator(\"c\")}>c</b>}\n            onChange={(e) => optionOnInputFunc(\"c\", e.target.value)}\n            className={cngenerator(\"c\")}\n            onFocus={() => setCn(\"c\")}\n            onBlur={() => setCn(\"\")}\n            label='Option C'\n          />\n          <InputBase\n            endAdornment={checkb(\"d\")}\n            startAdornment={<b className={selectorcnGenerator(\"d\")}>d</b>}\n            onChange={(e) => optionOnInputFunc(\"d\", e.target.value)}\n            className={cngenerator(\"d\")}\n            onFocus={() => setCn(\"d\")}\n            onBlur={() => setCn(\"\")}\n            label='Option D'\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n  return (\n    <Paper class='Question'>\n      <form class='Question-form'>\n        <div className='Question-id'>\n          <i className='fa fa-pencil editpencil'></i>\n          <input\n            type='text'\n            class='questionedit'\n            autoComplete='off'\n            onChange={(e) => titleOnInputFunc(e.target.value)}\n            defaultValue={\"Question \" + props.id}\n            // isn't working inputProps={{ maxlength: 40 }}\n            maxLength='40'\n          />\n        </div>\n\n        <div className={editorClassname}>\n          <QuestionEditor\n            editorState={editorState}\n            onChange={questionOnInputFunc}\n            onFocus={setEditorClassname}\n            onBlur={setEditorClassname}\n          />\n        </div>\n\n        {/* What is it? */}\n        <div class='Question-error'>{/* Put dialogs or Error here */}</div>\n\n        {mcqChoiceGeneratingFunc()}\n      </form>\n    </Paper>\n  );\n}\n\nexport default McqQuestion;\n","/Users/waseehaque/Codes/McqApp/makers/src/components/QuestionEditor.js",["101","102","103","104","105","106"],"import { Paper } from '@material-ui/core';\nimport {Editor, RichUtils} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport './QuestionEditor.css'\n\n\n/**\n * Returns a question Editor, with all the necessary things.\n * \n * props.editorState\n * props.onChange\n * props.onFocus\n * props.onBlur\n */\nexport default function QuestionEditor(props){\n\n    const [toggleBold, setToggleBold] = useState(false);\n    const [toggleUnderline, setToggleUnderline] = useState(false);\n    const [toggleItalic, setToggleItalic] = useState(false);\n\n\n    function handleRichUtils(style){\n        \n        var newState;\n        switch(style){\n            case 'BOLD':\n                newState = RichUtils.toggleInlineStyle(props.editorState, 'BOLD');\n        }\n        if(newState) props.onChange(newState);\n        \n    }\n\n    function generateBlockStyle(){\n\n    }\n            \n\n    /**\n     * Function that handles command like ctrl+b to bold and ctrl+u to underline and the likes.\n     */\n    function handleKeyCommand(command, editorState){\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        console.log(newState);\n\n        if (newState){\n            props.onChange(newState);\n        }\n        else {\n            console.log(\"Nothing to run that command on.\")\n        }\n\n    }\n\n    function onClickBold(e){\n        if(toggleBold){\n            e.target.className=\"inlinebutton\";\n            setToggleBold(false);\n        }\n        else{\n            e.target.className=\"inlinebutton_active\";\n            setToggleBold(true);\n        }\n        \n    }\n\n    function onClickUnderline(e){\n        if(toggleUnderline){\n            e.target.className=\"inlinebutton\";\n            setToggleUnderline(false);\n        }\n        else{\n            e.target.className=\"inlinebutton_active\";\n            setToggleUnderline(true);\n        }\n    }\n\n    function onClickItalic(e){\n        if(toggleUnderline){\n            e.target.className=\"inlinebutton\";\n            setToggleUnderline(false);\n        }\n        else{\n            e.target.className=\"inlinebutton_active\";\n            setToggleUnderline(true);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div\n                    onFocus={() => props.onFocus(\"question-text-selected\")} \n                    onBlur={() => props.onBlur(\"question-text\")}>\n                        <div className='btns'>\n                            <span className=\"inlinebutton\" onClick={(e)=>onClickBold(e)}>Bold</span>\n                            <span className=\"inlinebutton\" onClick={(e)=>onClickUnderline(e)}>Underline</span>\n                            <span className=\"inlinebutton\" onClick={(e)=>onClickItalic(e)}>Italic</span>\n                        </div>\n                <Editor placeholder=\"Add details to your Question\"\n                handleKeyCommand={handleKeyCommand} \n                editorState={props.editorState} \n                onChange={props.onChange}>\n                </Editor>\n\n            </div>\n        </React.Fragment>\n    );\n}","/Users/waseehaque/Codes/McqApp/makers/src/components/ErrorPage.js",[],{"ruleId":"107","severity":1,"message":"108","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":17},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"116","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"107","severity":1,"message":"116","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"118","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":1,"column":18,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"120","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":18,"column":3,"nodeType":"123","endLine":26,"endColumn":4},{"ruleId":"107","severity":1,"message":"124","line":6,"column":23,"nodeType":"109","messageId":"110","endLine":6,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":94,"column":9,"nodeType":"109","messageId":"127","endLine":94,"endColumn":22},{"ruleId":"125","severity":1,"message":"128","line":117,"column":7,"nodeType":"109","messageId":"127","endLine":117,"endColumn":15},{"ruleId":"107","severity":1,"message":"129","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"130","line":3,"column":16,"nodeType":"109","messageId":"110","endLine":3,"endColumn":22},{"ruleId":"107","severity":1,"message":"118","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":15},{"ruleId":"107","severity":1,"message":"131","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":20},{"ruleId":"121","severity":1,"message":"132","line":23,"column":36,"nodeType":"133","endLine":23,"endColumn":38,"suggestions":"134"},{"ruleId":"107","severity":1,"message":"118","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":1,"column":18,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"116","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":49,"column":3,"nodeType":"137","messageId":"138","endLine":51,"endColumn":4},{"ruleId":"139","severity":1,"message":"140","line":49,"column":3,"nodeType":"137","messageId":"141","endLine":51,"endColumn":4},{"ruleId":"107","severity":1,"message":"117","line":2,"column":38,"nodeType":"109","messageId":"110","endLine":2,"endColumn":48},{"ruleId":"107","severity":1,"message":"142","line":3,"column":17,"nodeType":"109","messageId":"110","endLine":3,"endColumn":26},{"ruleId":"121","severity":1,"message":"143","line":115,"column":40,"nodeType":"133","endLine":115,"endColumn":42,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":183,"column":14,"nodeType":"147","messageId":"148","endLine":183,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":188,"column":14,"nodeType":"147","messageId":"148","endLine":188,"endColumn":16},{"ruleId":"107","severity":1,"message":"149","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":15},{"ruleId":"107","severity":1,"message":"150","line":21,"column":12,"nodeType":"109","messageId":"110","endLine":21,"endColumn":24},{"ruleId":"107","severity":1,"message":"151","line":21,"column":26,"nodeType":"109","messageId":"110","endLine":21,"endColumn":41},{"ruleId":"107","severity":1,"message":"152","line":24,"column":14,"nodeType":"109","messageId":"110","endLine":24,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":27,"column":9,"nodeType":"155","messageId":"156","endLine":30,"endColumn":10},{"ruleId":"107","severity":1,"message":"157","line":35,"column":14,"nodeType":"109","messageId":"110","endLine":35,"endColumn":32},"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'ErrorPage' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionDeclaration","'useSelector' is defined but never used.","no-redeclare","'session_token' is already defined.","redeclared","'response' is already defined.","'Grid' is defined but never used.","'Hidden' is defined but never used.","'SubmitTest' is defined but never used.","React Hook useEffect has a missing dependency: 'onInitialLoad'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'fillUpWithDefault'. Either include it or remove the dependency array.",["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'toggleItalic' is assigned a value but never used.","'setToggleItalic' is assigned a value but never used.","'handleRichUtils' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'generateBlockStyle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [onInitialLoad]",{"range":"166","text":"167"},"Update the dependencies array to be: [fillUpWithDefault]",{"range":"168","text":"169"},[677,679],"[onInitialLoad]",[3864,3866],"[fillUpWithDefault]"]