[{"/Users/waseehaque/Codes/McqApp/makers/src/index.js":"1","/Users/waseehaque/Codes/McqApp/makers/src/reportWebVitals.js":"2","/Users/waseehaque/Codes/McqApp/makers/src/components/store.js":"3","/Users/waseehaque/Codes/McqApp/makers/src/components/testComponent.js":"4","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard.js":"5","/Users/waseehaque/Codes/McqApp/makers/src/components/App.js":"6","/Users/waseehaque/Codes/McqApp/makers/src/components/ExamArea.js":"7","/Users/waseehaque/Codes/McqApp/makers/src/components/api.js":"8","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-exam.js":"9","/Users/waseehaque/Codes/McqApp/makers/src/components/McqQuestion.js":"10","/Users/waseehaque/Codes/McqApp/makers/src/components/QuestionEditor.js":"11","/Users/waseehaque/Codes/McqApp/makers/src/components/LoginPage.js":"12","/Users/waseehaque/Codes/McqApp/makers/src/components/ExamView.js":"13"},{"size":1063,"mtime":1611642760437,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608538176884,"results":"16","hashOfConfig":"15"},{"size":1653,"mtime":1611401120112,"results":"17","hashOfConfig":"15"},{"size":400,"mtime":1610554863234,"results":"18","hashOfConfig":"15"},{"size":2649,"mtime":1611401286281,"results":"19","hashOfConfig":"15"},{"size":1617,"mtime":1611643516888,"results":"20","hashOfConfig":"15"},{"size":993,"mtime":1611401113118,"results":"21","hashOfConfig":"15"},{"size":2611,"mtime":1611475165203,"results":"22","hashOfConfig":"15"},{"size":1847,"mtime":1611401286279,"results":"23","hashOfConfig":"15"},{"size":8788,"mtime":1611401286283,"results":"24","hashOfConfig":"15"},{"size":1664,"mtime":1611040851317,"results":"25","hashOfConfig":"15"},{"size":2803,"mtime":1611642723559,"results":"26","hashOfConfig":"15"},{"size":2049,"mtime":1611474461034,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ed4oe2",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/waseehaque/Codes/McqApp/makers/src/index.js",["60"],"/Users/waseehaque/Codes/McqApp/makers/src/reportWebVitals.js",[],["61","62"],"/Users/waseehaque/Codes/McqApp/makers/src/components/store.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/testComponent.js",["63","64","65"],"import React, { useState, useEffect, useContext } from 'react';\n\nfunction TestComponent(props) {\n\n\n    return(\n        <div>\n            <input type=\"email\" placeholder=\"Email ID\" id=\"email\"></input>\n            <input type=\"password\" placeholder=\"Password\" id=\"password\"></input>\n            <button type=\"submit\" value=\"submit\">Submit</button>\n        </div>\n    );\n}\n\nexport default TestComponent;","/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard.js",["66","67","68"],"import { AppBar, Toolbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport Exam from \"./Dashboard-exam\";\n\nfunction Dashboard() {\n  const [toggleDrawer, setToggleDrawer] = useState(true);\n  const toggleDrawerHandler = () =>\n    toggleDrawer ? setToggleDrawer(false) : setToggleDrawer(true);\n  // const toggleOpenDrawerHandler = () =>\n  //   toggleDrawer ? setToggleDrawer(false) : null;\n\n  console.log(toggleDrawer);\n\n  let pushLeft;\n  toggleDrawer ? (pushLeft = { left: \"0rem\" }) : (pushLeft = { left: \"-100%\" });\n\n  return (\n    <div className='Dashboard'>\n      {/* Drawer *********************/}\n      <div className='Dashboard-drawer' style={pushLeft}>\n        <div>\n          <button className='toggle-close' onClick={toggleDrawerHandler}>\n            <i className='fa fa-times'></i>\n            <span className='sr-only'>Close Drawer</span>\n          </button>\n          <div className='welcome'>\n            <img\n              className='user-avatar'\n              src='https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png'\n              alt='User Avatar'\n            />\n\n            <p>\n              Welcome, <br />\n              <span>Anonymous User</span>\n            </p>\n          </div>\n          <div className='tabs'>\n            <i className='fa fa-user-circle'></i>\n            <span>Profile</span>\n          </div>\n          <div className='tabs active'>\n            <i className='fa fa-book'></i>\n            <span>Exams</span>\n          </div>\n\n          <div className='tabs'>\n            <i className='fa fa-cog'></i>\n            <span>Settings</span>\n          </div>\n        </div>\n\n        <button className='logout'>Log out</button>\n      </div>\n\n      {/* Exam boards ******************/}\n      <div className='Dashboard-content'>\n        <div className='header'>\n          <button className='toggle-menu' onClick={toggleDrawerHandler}>\n            <i className='fa fa-bars'></i>\n            <span className='sr-only'>Toggle Drawer Menu</span>\n          </button>\n\n          <button className='create-new'>\n            <i className='fa fa-plus-square'></i>\n            <span>Create New Exam</span>\n          </button>\n        </div>\n\n        {/* All the exams *********/}\n        <div className='Dashboard-boards'>\n          <Exam />\n          <Exam />\n          <Exam />\n          <Exam />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n\n/*\n1. fixed the drawer to the left with a width of 22.5rem/225px.\n2. The Exam will come from Dashboard-exam.js which will get data from the api\n*/\n","/Users/waseehaque/Codes/McqApp/makers/src/components/App.js",["69","70","71"],"/Users/waseehaque/Codes/McqApp/makers/src/components/ExamArea.js",[],"/Users/waseehaque/Codes/McqApp/makers/src/components/api.js",["72"],"/Users/waseehaque/Codes/McqApp/makers/src/components/Dashboard-exam.js",["73","74","75","76","77"],"import { AppBar, Toolbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard-exam.css\";\n\nfunction DashboardExam() {\n  // Display view more btn functionality\n  const [viewMore, setViewMore] = useState(false);\n  const viewMoreHandler = () =>\n    !viewMore ? setViewMore(true) : setViewMore(false);\n  const viewMoreBtn = viewMore ? (\n    <button className='btn-viewMore'>View result</button>\n  ) : null;\n\n  const copyValueHandler = () => console.log(\"Copy func\");\n\n  return (\n    <div className='Dashboard-board'>\n      <div className='top'>\n        <div className='board-content'>\n          <h3>ECO 486: Homework Quiz 5</h3>\n          <p>\n            Created: <span>16 January, 2021</span>\n          </p>\n          <p>40 Multiple Choice Questions</p>\n        </div>\n        <div className='dots' onClick={viewMoreHandler}>\n          <i className='fa fa-ellipsis-h'>\n            <span className='sr-only'>Click to view result</span>\n          </i>\n          {viewMoreBtn}\n        </div>\n      </div>\n      <div className='board-settings'>\n        <p className='exam-id' onClick={copyValueHandler}>\n          Exam id: <span>NF453</span>\n        </p>\n\n        <button className='button edit'>\n          <i className='fa fa-edit'></i>\n          <span>Edit</span>\n        </button>\n        <button className='button'>\n          <i className='fa fa-trash'></i>\n          <span>Delete</span>\n        </button>\n      </div>\n    </div>\n  );\n  {\n    /* single board/box ends */\n  }\n}\n\nexport default DashboardExam;\n\n/*\n<AppBar style={{ background: \"#14213D\", position: \"fixed\" }}>\n        <Toolbar></Toolbar>\n      </AppBar>\n\n      <div className='Exam-card' position='fixed'></div>\n      <div className='Exam-card' position='fixed'></div>\n\n*/\n\n/*\n1. Single Exam \n2. All the data will be parsed from the api\n*/\n","/Users/waseehaque/Codes/McqApp/makers/src/components/McqQuestion.js",["78","79","80","81","82"],"import \"./McqQuestion.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Paper, TextField, Checkbox, FormGroup } from \"@material-ui/core\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { EditorState } from \"draft-js\";\n\nimport QuestionEditor from \"./QuestionEditor\";\n\nconst ADD_QUESTION = \"ADD_QUESTION\";\nconst ADD_ANSWER = \"ADD_ANSWER\";\n\n/*\nThis is the component that lets the maker create the question, and then stores the question to packedQuestion.\npackedQuestipn is in a format which can be directly sent to the API to be uploaded to the database.\nA basic question has question_text, question.title\n\nProps passed:\nprops.id = The Question ID.\n\nThings to Do:\n*/\n\nfunction McqQuestion(props) {\n  const [cn, setCn] = useState(\"Option-unselected\");\n  const [editorClassname, setEditorClassname] = useState(\"question-text\");\n  const [packedQuestion, setPackedQuestion] = useState({});\n  const [packedAnswer, setPackedAnswer] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const [editorState, setEditorState] = React.useState(() =>\n    EditorState.createEmpty()\n  );\n\n  /**\n   * This function is the action that gets passed to the Redux store.\n   * @param {String} quesid Question ID in the form ques1, ques2, ques3 and onwards. Not an integer.\n   * @param {Object} ques Packed question that gets stored directy into the store, ready for use later on.\n   */\n  function addQuestionAction(quesid, ques) {\n    var retval = {\n      type: ADD_QUESTION,\n      id: quesid,\n      question: ques,\n    };\n\n    return retval;\n  }\n\n  /**\n   * This function is the action that gets passed to the Redux store.\n   * @param {String} quesid Question ID in the form ques1, ques2, ques3 and onwards. Not an integer.\n   * @param {Object} answer Packed answer that gets stored directy into the store, ready for use later on.\n   */\n  function addAnswerAction(quesid, answer) {\n    var retval = {\n      type: ADD_ANSWER,\n      id: quesid,\n      answer: answer,\n    };\n\n    return retval;\n  }\n\n  /*These two variables store a local copy of packedQuestion. These variables are first updated with the information from\n    onChange (or a variation of it), and then packedQuestion is set to an instance of this. */\n\n  let local_question_mcq = {};\n  let local_answerChoices_mcq = {};\n  var local_correct_answer = [];\n\n  /**\n   * When a new question is created, fillUpWithDefault gets called, and it fills up the Redux store with defaults for new Questions.\n   * This helps in making sure everything stored on the database is as per the schema, even if the user has left out things.\n   */\n  function fillUpWithDefault() {\n    function addOption(character, value) {\n      local_answerChoices_mcq[character] = value;\n      local_question_mcq[\"answer_choices\"] = local_answerChoices_mcq;\n    }\n\n    /**\n     * Function that packs Questions.\n     * @param {Boolean} title Boolean isTitle. If the value is a title set to true. If it is question_text, set to false.\n     * @param {String} value Value that would be sent to packed question.\n     */\n    function addQuestion(title, value) {\n      if (title) {\n        local_question_mcq[\"title\"] = value;\n      } else {\n        local_question_mcq[\"question_text\"] = value;\n      }\n    }\n\n    addQuestion(true, \"Question \" + props.id);\n    addQuestion(false, \"\");\n\n    addOption(\"a\", \"\");\n    addOption(\"b\", \"\");\n    addOption(\"c\", \"\");\n    addOption(\"d\", \"\");\n\n    local_question_mcq[\"title\"] = \"Question \" + props.id;\n    local_question_mcq[\"id\"] = props.id;\n\n    setPackedQuestion(local_question_mcq);\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n\n    //These are for the answers\n    dispatch(addAnswerAction(\"ques\" + props.id, \"\"));\n  }\n\n  useEffect(() => fillUpWithDefault(), []);\n\n  function optionOnInputFunc(character, value) {\n    local_question_mcq = { ...packedQuestion };\n    local_answerChoices_mcq = { ...local_question_mcq[\"answer_choices\"] };\n    local_answerChoices_mcq[character] = value;\n    local_question_mcq[\"answer_choices\"] = local_answerChoices_mcq;\n\n    setPackedQuestion(local_question_mcq);\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n  }\n\n  function titleOnInputFunc(value) {\n    local_question_mcq = { ...packedQuestion };\n    local_question_mcq[\"title\"] = value;\n    setPackedQuestion(local_question_mcq);\n  }\n\n  function questionOnInputFunc(value) {\n    setEditorState(value);\n    local_question_mcq = { ...packedQuestion };\n    local_question_mcq[\n      \"question_text\"\n    ] = value.getCurrentContent().getPlainText();\n    setPackedQuestion(local_question_mcq);\n\n    dispatch(addQuestionAction(\"ques\" + props.id, local_question_mcq));\n  }\n\n  /**Returns the checkbox\n   *\n   * @param checkBox_id The letter than corresponds to the option choice\n   */\n  function checkb(checkBox_id) {\n    return (\n      <Checkbox\n        tabIndex='-1'\n        disableRipple={true}\n        onClick={(e) => recordAnswer(checkBox_id, e)}\n        style={{ color: \"#FCA311\", outline: \"none\" }}\n        icon={<CheckBoxIcon fontSize='medium' style={{ color: \"#D9D9D9\" }} />}\n        checkedIcon={<CheckBoxIcon fontSize='medium' />}\n      />\n    );\n  }\n\n  function recordAnswer(checkBox_id, event) {\n    //This if statement checks if the checkbox is being checked or unchecked. We ignore if being unchecked.\n    if (event.target.checked) {\n      local_correct_answer = packedAnswer;\n      local_correct_answer.push(checkBox_id);\n      setPackedAnswer(local_correct_answer);\n      dispatch(addAnswerAction(\"ques\" + props.id, checkBox_id));\n    } else {\n      local_correct_answer = packedAnswer;\n      local_correct_answer.pop();\n      setPackedAnswer(local_correct_answer);\n      dispatch(\n        addAnswerAction(\n          \"ques\" + props.id,\n          local_correct_answer[local_correct_answer.length - 1]\n        )\n      );\n    }\n  }\n\n  //Styling functions.\n  function cngenerator(char) {\n    if (char == cn) return \"Option-selected\";\n    else return \"Option-unselected\";\n  }\n\n  function selectorcnGenerator(char) {\n    if (char == cn) return \"selector-selected\";\n    else return \"selector-unselected\";\n  }\n\n  function mcqChoiceGeneratingFunc() {\n    return (\n      <div class='Opt'>\n        <FormGroup>\n          <InputBase\n            endAdornment={checkb(\"a\")}\n            startAdornment={<b className={selectorcnGenerator(\"a\")}>a</b>}\n            onChange={(e) => optionOnInputFunc(\"a\", e.target.value)}\n            className={cngenerator(\"a\")}\n            onFocus={() => setCn(\"a\")}\n            onBlur={() => setCn(\"\")}\n            label='Option A'\n          />\n          <InputBase\n            endAdornment={checkb(\"b\")}\n            startAdornment={<b className={selectorcnGenerator(\"b\")}>b</b>}\n            onChange={(e) => optionOnInputFunc(\"b\", e.target.value)}\n            className={cngenerator(\"b\")}\n            onFocus={() => setCn(\"b\")}\n            onBlur={() => setCn(\"\")}\n            label='Option B'\n          />\n          <InputBase\n            endAdornment={checkb(\"c\")}\n            startAdornment={<b className={selectorcnGenerator(\"c\")}>c</b>}\n            onChange={(e) => optionOnInputFunc(\"c\", e.target.value)}\n            className={cngenerator(\"c\")}\n            onFocus={() => setCn(\"c\")}\n            onBlur={() => setCn(\"\")}\n            label='Option C'\n          />\n          <InputBase\n            endAdornment={checkb(\"d\")}\n            startAdornment={<b className={selectorcnGenerator(\"d\")}>d</b>}\n            onChange={(e) => optionOnInputFunc(\"d\", e.target.value)}\n            className={cngenerator(\"d\")}\n            onFocus={() => setCn(\"d\")}\n            onBlur={() => setCn(\"\")}\n            label='Option D'\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n  return (\n    <Paper class='Question'>\n      <form class='Question-form'>\n        <div className='Question-id'>\n          <i className='fa fa-pencil editpencil'></i>\n          <input\n            type='text'\n            class='questionedit'\n            autoComplete='off'\n            onChange={(e) => titleOnInputFunc(e.target.value)}\n            defaultValue={\"Question \" + props.id}\n            // isn't working inputProps={{ maxlength: 40 }}\n            maxLength='40'\n          />\n        </div>\n\n        <div className={editorClassname}>\n          <QuestionEditor\n            editorState={editorState}\n            onChange={questionOnInputFunc}\n            onFocus={setEditorClassname}\n            onBlur={setEditorClassname}\n          />\n        </div>\n\n        {/* What is it? */}\n        <div class='Question-error'>{/* Put dialogs or Error here */}</div>\n\n        {mcqChoiceGeneratingFunc()}\n      </form>\n    </Paper>\n  );\n}\n\nexport default McqQuestion;\n","/Users/waseehaque/Codes/McqApp/makers/src/components/QuestionEditor.js",["83","84","85","86","87"],"import { Paper } from '@material-ui/core';\nimport {Editor, RichUtils} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport './QuestionEditor.css'\n\n\n/**\n * Returns a question Editor, with all the necessary things.\n * \n * props.editorState\n * props.onChange\n * props.onFocus\n * props.onBlur\n */\nexport default function QuestionEditor(props){\n\n\n    function handleRichUtils(style){\n        \n        var newState;\n        switch(style){\n            case 'BOLD':\n                newState = RichUtils.toggleInlineStyle(props.editorState, 'BOLD');\n        }\n        if(newState) props.onChange(newState);\n        \n    }\n\n    function generateBlockStyle(){\n\n    }\n            \n\n    /**\n     * Function that handles command like ctrl+b to bold and ctrl+u to underline and the likes.\n     */\n    function handleKeyCommand(command, editorState){\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        console.log(newState);\n\n        if (newState){\n            props.onChange(newState);\n        }\n        else {\n            console.log(\"Nothing to run that command on.\")\n        }\n\n    }\n\n\n    return (\n        <React.Fragment>\n            <div\n                    onFocus={() => props.onFocus(\"question-text-selected\")} \n                    onBlur={() => props.onBlur(\"question-text\")}>\n\n                <Editor placeholder=\"Add details to your Question\"\n                handleKeyCommand={handleKeyCommand} \n                editorState={props.editorState} \n                onChange={props.onChange}>\n                </Editor>\n\n            </div>\n        </React.Fragment>\n    );\n}","/Users/waseehaque/Codes/McqApp/makers/src/components/LoginPage.js",["88"],"/Users/waseehaque/Codes/McqApp/makers/src/components/ExamView.js",["89","90","91","92","93","94"],{"ruleId":"95","severity":1,"message":"96","line":13,"column":8,"nodeType":"97","messageId":"98","endLine":13,"endColumn":21},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"104","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"105","line":1,"column":38,"nodeType":"97","messageId":"98","endLine":1,"endColumn":48},{"ruleId":"95","severity":1,"message":"106","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":16},{"ruleId":"95","severity":1,"message":"107","line":1,"column":18,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"104","line":2,"column":17,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"108","line":4,"column":28,"nodeType":"97","messageId":"98","endLine":4,"endColumn":33},{"ruleId":"95","severity":1,"message":"109","line":10,"column":17,"nodeType":"97","messageId":"98","endLine":10,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":40,"column":35,"nodeType":"112","endLine":40,"endColumn":37,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":98,"column":3,"nodeType":"116","messageId":"117","endLine":107,"endColumn":21},{"ruleId":"95","severity":1,"message":"106","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":16},{"ruleId":"95","severity":1,"message":"107","line":1,"column":18,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"104","line":2,"column":17,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":49,"column":3,"nodeType":"120","messageId":"121","endLine":51,"endColumn":4},{"ruleId":"114","severity":1,"message":"115","line":49,"column":3,"nodeType":"120","messageId":"117","endLine":51,"endColumn":4},{"ruleId":"95","severity":1,"message":"105","line":2,"column":38,"nodeType":"97","messageId":"98","endLine":2,"endColumn":48},{"ruleId":"95","severity":1,"message":"122","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":26},{"ruleId":"110","severity":1,"message":"123","line":115,"column":40,"nodeType":"112","endLine":115,"endColumn":42,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":183,"column":14,"nodeType":"127","messageId":"128","endLine":183,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":188,"column":14,"nodeType":"127","messageId":"128","endLine":188,"endColumn":16},{"ruleId":"95","severity":1,"message":"129","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":15},{"ruleId":"95","severity":1,"message":"103","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":18},{"ruleId":"95","severity":1,"message":"130","line":20,"column":14,"nodeType":"97","messageId":"98","endLine":20,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":23,"column":9,"nodeType":"133","messageId":"134","endLine":26,"endColumn":10},{"ruleId":"95","severity":1,"message":"135","line":31,"column":14,"nodeType":"97","messageId":"98","endLine":31,"endColumn":32},{"ruleId":"95","severity":1,"message":"136","line":6,"column":23,"nodeType":"97","messageId":"98","endLine":6,"endColumn":34},{"ruleId":"95","severity":1,"message":"137","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"138","line":3,"column":16,"nodeType":"97","messageId":"98","endLine":3,"endColumn":22},{"ruleId":"95","severity":1,"message":"106","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"107","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":15},{"ruleId":"95","severity":1,"message":"139","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":23,"column":36,"nodeType":"112","endLine":23,"endColumn":38,"suggestions":"140"},"no-unused-vars","'TestComponent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'login' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onInitialLoad'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'fillUpWithDefault'. Either include it or remove the dependency array.",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'handleRichUtils' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'generateBlockStyle' is defined but never used.","'useSelector' is defined but never used.","'Grid' is defined but never used.","'Hidden' is defined but never used.","'SubmitTest' is defined but never used.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"146","fix":"150"},"Update the dependencies array to be: [onInitialLoad]",{"range":"151","text":"152"},"Update the dependencies array to be: [fillUpWithDefault]",{"range":"153","text":"154"},{"range":"155","text":"152"},[1080,1082],"[onInitialLoad]",[3864,3866],"[fillUpWithDefault]",[677,679]]